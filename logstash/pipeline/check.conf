input {
    jdbc {
        jdbc_driver_library => "/usr/share/logstash/mysql-connector-java-8.0.28.jar"
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        jdbc_connection_string => "jdbc:mysql://database:3306/address?useSSL=false&allowPublicKeyRetrieval=true"
        jdbc_user => "root"
        jdbc_password => "root"
        jdbc_fetch_size => 100000
        use_column_value => true
        tracking_column => "updated_at"
        tracking_column_type => "timestamp"
        statement =>  "
        SELECT a.ZIP_NO AS zip_code,
        CONCAT_WS(' ',SIDO,SIGUNGU,IFNULL(EUPMYUN,''),DORO,IF(BUILD_NO2 IS NOT NULL,CONCAT(BUILD_NO1,'-',BUILD_NO2),BUILD_NO1)) AS doro_address,
        CONCAT_WS(' ',SIDO,SIGUNGU,IFNULL(DONG_NM,''),IFNULL(EUPMYUN,''),IFNULL(RI,''),IF(ZIBUN2 IS NOT NULL,CONCAT(ZIBUN1,'-',ZIBUN2),ZIBUN1)) AS zibun_address,
        CONCAT(SIDO,SIGUNGU,IFNULL(EUPMYUN,''),DORO,IF(BUILD_NO2 IS NOT NULL,CONCAT(BUILD_NO1,'-',BUILD_NO2),BUILD_NO1)) AS low_doro_address,
        CONCAT(SIDO,SIGUNGU,IFNULL(DONG_NM,''),IFNULL(EUPMYUN,''),IFNULL(RI,''),IF(ZIBUN2 IS NOT NULL,CONCAT(ZIBUN1,'-',ZIBUN2),ZIBUN1)) AS low_zibun_address,
        a.SIGUNGU AS gigungu_name,
        a.EUPMYUN AS eupmyun_name,
        a.DORO AS doro_name,
        a.BUILD_NO1 AS build_no1,
        a.BUILD_NO2 AS build_no2,
        a.DONG_NM AS dong_name,
        a.RI AS ri_name, 
        a.ZIBUN1 AS zibun_no1,
        a.ZIBUN2 AS zibun_no2,
        a.BUILD_NM AS build_name,
        a.BUILD_NO_MANAGE_NO AS manage_code,
        a.CREATED_AT AS created_at,
        a.UPDATED_AT AS updated_at
        FROM Main_address a
        where updated_at > :sql_last_value
        order by updated_at asc"
    }
}
filter { 
    mutate {
        remove_field => ["@version","@timestamp"] 
    }  
}

output {
    elasticsearch {
        hosts => ["elasticsearch:9200"]
        index => "check"
        document_id => "%{manage_code}"
        manage_template => true
        template => "/usr/share/logstash/templates/check_template.json"
        template_name => "check"
        template_overwrite => true
    }
}